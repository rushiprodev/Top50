# üé¨ Filter Movies - SQL Query

## üìù Problem Statement

Given a table `Cinema` with movie information, write a SQL query to:

- Select only the movies with an **odd-numbered ID**
- The `description` **must not be** `'boring'`
- Order the results by **rating in descending order**

---

## üìä Table: `Cinema`

| Column Name | Type    | Description                             |
|-------------|---------|-----------------------------------------|
| id          | int     | Primary key, unique movie ID            |
| movie       | varchar | Name of the movie                       |
| description | varchar | Description/genre of the movie          |
| rating      | float   | Movie rating (2 decimal places, 0‚Äì10)   |

---

## üéØ Objective

Return all columns of the movies that:

- Have an **odd ID** (`id % 2 = 1`)
- Have a `description` **not equal to 'boring'**
- Are **sorted by rating** (highest first)

---

## üí° Sample Input

### `Cinema` Table

| id | movie      | description | rating |
|----|------------|-------------|--------|
| 1  | War        | great 3D    | 8.9    |
| 2  | Science    | fiction     | 8.5    |
| 3  | irish      | boring      | 6.2    |
| 4  | Ice song   | Fantacy     | 8.6    |
| 5  | House card | Interesting | 9.1    |

---

## ‚úÖ Expected Output

| id | movie      | description | rating |
|----|------------|-------------|--------|
| 5  | House card | Interesting | 9.1    |
| 1  | War        | great 3D    | 8.9    |

---

## ‚úÖ SQL Solution

```sql
SELECT  * FROM Cinema
WHERE 
  MOD(id, 2) = 1            -- Only odd-numbered IDs
 AND description != 'boring'   -- Exclude boring movies
ORDER BY rating DESC;              -- Sort by highest r


## ‚úÖ SQL Solution

select e.name,B.bonus from Employee e left join Bonus B on e.empId=B.empId where bonus<1000 or bonus is null;