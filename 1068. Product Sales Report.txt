# üß† LeetCode SQL - 1068. Product Sales Report

## üìÑ Problem Description

You are given two tables: `Sales` and `Product`.

---

### Table: `Sales`

| Column Name | Type  |
|-------------|-------|
| sale_id     | int   |
| product_id  | int   |
| year        | int   |
| quantity    | int   |
| price       | int   |

- `(sale_id, year)` is the **primary key**.
- `product_id` is a **foreign key** referring to `Product.product_id`.
- `price` is **per unit**.
- Each row represents a sale of a product in a specific year.

---

### Table: `Product`

| Column Name  | Type    |
|--------------|---------|
| product_id   | int     |
| product_name | varchar |

- `product_id` is the **primary key**.
- Each row indicates the name of the product.

---

## ‚ùì Goal

Write a query to output the following fields for **each sale**:
- `product_name`
- `year`
- `price`

Return the result in **any order**.

---

## üß™ Example

### Input

#### Sales Table:

| sale_id | product_id | year | quantity | price |
|---------|------------|------|----------|-------|
| 1       | 100        | 2008 | 10       | 5000  |
| 2       | 100        | 2009 | 12       | 5000  |
| 7       | 200        | 2011 | 15       | 9000  |

#### Product Table:

| product_id | product_name |
|------------|--------------|
| 100        | Nokia        |
| 200        | Apple        |
| 300        | Samsung      |

---

### Output

| product_name | year | price |
|--------------|------|-------|
| Nokia        | 2008 | 5000  |
| Nokia        | 2009 | 5000  |
| Apple        | 2011 | 9000  |

---

## ‚úÖ MySQL Solution

```sql
SELECT p.product_name, s.year, s.price
FROM Sales AS s
INNER JOIN Product AS p
ON s.product_id = p.product_id;
