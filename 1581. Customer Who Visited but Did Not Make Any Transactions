# üõí Visits Without Transactions - SQL Query

## üìù Problem Statement

You are given two tables: `Visits` and `Transactions`.

### Table: `Visits`

| Column Name | Type | Description                          |
|-------------|------|--------------------------------------|
| visit_id    | int  | Unique ID for the visit              |
| customer_id | int  | ID of the customer who visited       |

This table contains records of all mall visits by customers.

---

### Table: `Transactions`

| Column Name    | Type | Description                          |
|----------------|------|--------------------------------------|
| transaction_id | int  | Unique ID for the transaction        |
| visit_id       | int  | ID of the visit during which it occurred |
| amount         | int  | Amount spent in the transaction      |

This table contains records of transactions that occurred during each visit.

---

## üéØ Objective

Find the IDs of customers who **visited the mall without making any transactions** and the number of such visits.  
Return the result as:

- `customer_id` ‚Äì the ID of the customer
- `count_no_trans` ‚Äì number of visits **without** any transaction

---

## üí° Sample Input

### Visits

| visit_id | customer_id |
|----------|-------------|
| 1        | 23          |
| 2        | 9           |
| 4        | 30          |
| 5        | 54          |
| 6        | 96          |
| 7        | 54          |
| 8        | 54          |

### Transactions

| transaction_id | visit_id | amount |
|----------------|----------|--------|
| 2              | 5        | 310    |
| 3              | 5        | 300    |
| 9              | 5        | 200    |
| 12             | 1        | 910    |
| 13             | 2        | 970    |

---

## ‚úÖ Expected Output

| customer_id | count_no_trans |
|-------------|----------------|
| 54          | 2              |
| 30          | 1              |
| 96          | 1              |

---

## ‚úÖ SQL Solution

```sql
SELECT  
    V.customer_id, 
    COUNT(V.visit_id) AS count_no_trans
FROM 
    Visits AS V
LEFT JOIN 
    Transactions AS T 
ON 
    V.visit_id = T.visit_id
WHERE 
    T.transaction_id IS NULL
GROUP BY 
    V.customer_id;
