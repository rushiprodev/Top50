# 1661. Average Time of Process per Machine

## Problem Statement

Table: `Activity`

| Column Name   | Type    |
|---------------|---------|
| machine_id    | int     |
| process_id    | int     |
| activity_type | enum    |
| timestamp     | float   |

- **(machine_id, process_id, activity_type)** is the primary key.
- `machine_id` → ID of a machine.
- `process_id` → ID of a process on that machine.
- `activity_type` → either `'start'` or `'end'`.
- `timestamp` → time in seconds (float).
- For every `(machine_id, process_id)`:
  - There will be exactly one `start` and one `end`.
  - Start time will always be less than end time.

**Goal:**  
For each machine, calculate the **average time** to complete a process:

\[
\text{Average Time} = \frac{\text{Sum of (end time - start time)}}{\text{Number of processes}}
\]

The result should include:
- `machine_id`
- `processing_time` → rounded to **3 decimal places**

---

## Example

**Input:**

**Explanation:**
- Machine `0`: ((1.520 - 0.712) + (4.120 - 3.140)) / 2 = **0.894**
- Machine `1`: ((1.550 - 0.550) + (1.420 - 0.430)) / 2 = **0.995**
- Machine `2`: ((4.512 - 4.100) + (5.000 - 2.500)) / 2 = **1.456**

---

## Approach

1. **Self-Join** the `Activity` table:
   - Join start and end rows using:
     - same `machine_id`
     - same `process_id`
     - one row with `activity_type = 'start'`
     - one row with `activity_type = 'end'`
2. **Calculate process time**:
   - `end.timestamp - start.timestamp`
3. **Aggregate by machine**:
   - **SUM** all process times for each machine.
   - Divide by the number of processes (`COUNT(process_id)`).
4. **Round** result to **3 decimal places**.

---

## SQL Solution

```sql
SELECT 
    a1.machine_id,
    ROUND(SUM(a2.timestamp - a1.timestamp) / COUNT(a1.process_id), 3) AS processing_time
FROM Activity a1
JOIN Activity a2
    ON a1.machine_id = a2.machine_id
   AND a1.process_id = a2.process_id
   AND a1.activity_type = 'start'
   AND a2.activity_type = 'end'
GROUP BY a1.machine_id;
