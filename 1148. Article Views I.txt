# üß† LeetCode SQL - 1148. Article Views I

## üìÑ Problem Description

You are given a `Views` table:

### Table: `Views`

| Column Name   | Type    |
|---------------|---------|
| article_id    | int     |
| author_id     | int     |
| viewer_id     | int     |
| view_date     | date    |

There is **no primary key**. Each row indicates that a `viewer` viewed an article (written by some `author`) on a specific `date`.

### üìå Note:

- If `author_id == viewer_id`, it means the **author viewed their own article**.

---

## ‚ùìGoal

Find all **authors who viewed at least one of their own articles**.

Return the result table with a single column:
- `id`: `author_id` who viewed their own article.

Sort the result in **ascending order**.

---

## üß™ Example

### Input: `Views` Table

| article_id | author_id | viewer_id | view_date  |
|------------|-----------|-----------|------------|
| 1          | 3         | 5         | 2019-08-01 |
| 1          | 3         | 6         | 2019-08-02 |
| 2          | 7         | 7         | 2019-08-01 |
| 2          | 7         | 6         | 2019-08-02 |
| 4          | 7         | 1         | 2019-07-22 |
| 3          | 4         | 4         | 2019-07-21 |
| 3          | 4         | 4         | 2019-07-21 |

### Output

| id  |
|-----|
| 4   |
| 7   |

---

## ‚úÖ MySQL Solution

```sql
SELECT DISTINCT author_id AS id
FROM Views
WHERE author_id = viewer_id
ORDER BY author_id;
