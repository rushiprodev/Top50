# 1174. Immediate Food Delivery II

[![LeetCode Problem](https://img.shields.io/badge/LeetCode-1174-blue)](https://leetcode.com/problems/immediate-food-delivery-ii/)
![Difficulty](https://img.shields.io/badge/Difficulty-Medium-orange)

---

## üìå Problem Description

We are given a table `Delivery` containing information about food delivery orders.

### Table: Delivery
| Column Name                 | Type    |
|-----------------------------|---------|
| delivery_id                 | int     |
| customer_id                 | int     |
| order_date                  | date    |
| customer_pref_delivery_date | date    |

- `delivery_id` is the unique identifier for each order.
- A customer's **first order** is the one with the **earliest order_date**.
- If `order_date = customer_pref_delivery_date`, the order is called **immediate**.
- If they are different, the order is called **scheduled**.
- We must find the **percentage of immediate orders among the first orders of all customers**, rounded to **2 decimal places**.

---

## üí° Example

**Input:**
+-------------+-------------+------------+-----------------------------+
| delivery_id | customer_id | order_date | customer_pref_delivery_date |
+-------------+-------------+------------+-----------------------------+
| 1 | 1 | 2019-08-01 | 2019-08-02 |
| 2 | 2 | 2019-08-02 | 2019-08-02 |
| 3 | 1 | 2019-08-11 | 2019-08-12 |
| 4 | 3 | 2019-08-24 | 2019-08-24 |
| 5 | 3 | 2019-08-21 | 2019-08-22 |
| 6 | 2 | 2019-08-11 | 2019-08-13 |
| 7 | 4 | 2019-08-09 | 2019-08-09 |
+-------------+-------------+------------+-----------------------------+


+----------------------+
| immediate_percentage |
+----------------------+
| 50.00 |
+----------------------+

pgsql
Copy
Edit

**Explanation:**
- **Customer 1:** First order = Delivery 1 ‚Üí Scheduled.
- **Customer 2:** First order = Delivery 2 ‚Üí Immediate.
- **Customer 3:** First order = Delivery 5 ‚Üí Scheduled.
- **Customer 4:** First order = Delivery 7 ‚Üí Immediate.

2 out of 4 customers have immediate first orders ‚Üí `(2/4)*100 = 50.00%`.

---

## üõ†Ô∏è SQL Solution

```sql
SELECT 
    ROUND(
        AVG(IF(order_date = customer_pref_delivery_date, 1, 0) * 100), 
        2
    ) AS immediate_percentage
FROM Delivery
WHERE (customer_id, order_date) IN (
    SELECT customer_id, MIN(order_date) 
    FROM Delivery 
    GROUP BY customer_id
);
üìñ Approach
1. Find each customer's first order
Use MIN(order_date) for each customer_id.

This ensures we only evaluate the first order per customer.

2. Check if the first order was immediate
Compare order_date with customer_pref_delivery_date.

If they are equal ‚Üí Immediate (1), else Scheduled (0).

3. Calculate the percentage
Take the average of the 1/0 values and multiply by 100.

Use ROUND(..., 2) to format the result.

‚è±Ô∏è Complexity
Time Complexity: O(N) ‚Äî We scan the table once and group by customer_id.

Space Complexity: O(1) ‚Äî Only intermediate grouping is used.

üìÇ Related Topics
SQL Aggregation

Subqueries

Conditional Logic in SQL

‚úÖ Key Takeaways
(customer_id, order_date) IN (subquery) is useful for filtering first orders.

AVG() on boolean values (1/0) is a clean way to get percentages.

Always ROUND() for fixed decimal formatting.